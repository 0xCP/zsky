说明：
在ssbc爬虫的基础上修复，现在可以7*24爬取的爬虫，修改了爬取策略，只入库音乐、电影、电子书。python实现的磁力搜索网站，代码比较烂，请轻喷！
搜索排行榜、浏览排行榜、DMCA投诉的功能未完成（其实是不想做）
使用sphinx进行索引＋jieba中文分词，用redis缓存访问页面
模板在templates目录，模板引擎是jinja2（非常易读），编写自己的专属模板非常方便，中文版文档 http://docs.jinkan.org/docs/jinja2/ 。
后台可以直接搜索、删除DMCA投诉的关键字，管理首页推荐关键字、用户搜索记录、查看每天爬取的资源数量、管理后台用户。
修改数据库密码后请修改manage.py里面的mysql+pymysql://root:后面的内容和simdht_work.py里面的DB_PASS
实验环境：centos7 python2.7
理论上支持python3，以及Ubuntu Debian等系统

安装教程：
#By 我本戏子 2017.7
#添加开机自启动功能，自动安装wget与net-tools，使用高性能适合高并发大流量的Nginx+Gunicorn+Gevent方案，延长爬虫与Mysql连接的超时时间，优化内核参数，优化打开文件数
systemctl stop firewalld.service  
systemctl disable firewalld.service   
systemctl stop iptables.service  
systemctl disable iptables.service  
setenforce 0  
sed -i s/"SELINUX=enforcing"/"SELINUX=disabled"/g  /etc/selinux/config
cat << EOF > /etc/sysctl.conf
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl =15
net.ipv4.tcp_retries2 = 5
net.ipv4.tcp_fin_timeout = 2
net.ipv4.tcp_max_tw_buckets = 36000
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_orphans = 32768
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_wmem = 8192 131072 16777216
net.ipv4.tcp_rmem = 32768 131072 16777216
net.ipv4.tcp_mem = 786432 1048576 1572864
net.ipv4.ip_local_port_range = 1024 65000
net.ipv4.ip_conntrack_max = 65536
net.ipv4.netfilter.ip_conntrack_max=65536
net.ipv4.netfilter.ip_conntrack_tcp_timeout_established=180
net.core.somaxconn = 16384
net.core.netdev_max_backlog = 16384
EOF
/sbin/sysctl -p /etc/sysctl.conf
/sbin/sysctl -w net.ipv4.route.flush=1
echo ulimit -HSn 65536 >> /etc/rc.local
echo ulimit -HSn 65536 >>/root/.bash_profile
ulimit -HSn 65536
#优化内核参数，优化打开文件数
yum -y install git 
#如果使用linode主机，请取消下面4行的注释
#wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyuncs.com/repo/Centos-7.repo
#wget -qO /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo
#yum clean metadata
#yum makecache
cd /root/
git  clone https://github.com/wenguonideshou/zsky.git
cd zsky
#源码在/root/zsky目录
yum -y install wget gcc gcc-c++ python-devel mariadb mariadb-devel mariadb-server
yum -y install epel-release python-pip redis
pip install -r requirements.txt
systemctl start  mariadb.service 
systemctl enable mariadb.service
systemctl start redis.service
systemctl enable redis.service
mysql -uroot  -e"create database zsky default character set utf8;"  
mysql -uroot  -e"set global interactive_timeout=31536000;set global wait_timeout=31536000;set global max_allowed_packet = 64*1024*1024;set global max_connections = 10000;" 
python manage.py init_db
#建表
python manage.py create_user
#按照提示输入用户名、密码、邮箱
#设置nginx为前端
yum -y install nginx
ps ef|grep httpd|awk '{print $2}'|grep -v grep|xargs kill -9
#杀死Apache
systemctl start  nginx.service
systemctl enable  nginx.service

cat << EOF > /etc/nginx/nginx.conf
user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
                      '\$status \$body_bytes_sent "\$http_referer" '
                      '"\$http_user_agent" "\$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;


    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name   这里输入你的域名;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
         proxy_pass http://127.0.0.1:8000;
         proxy_set_header Host \$host;
         proxy_set_header X-Real-IP \$remote_addr;
         proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        }
        location /static/ {
         root /root/zsky/; 
        }
        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}
EOF
nginx -s reload
cd /root/zsky
#启动gunicorn并在后台运行
nohup gunicorn -k gevent manage:app -b 127.0.0.1:8000 --reload>/dev/zero 2>&1&  
#运行爬虫并在后台运行
nohup python simdht_worker.py >/dev/zero 2>&1& 
现在解析域名即可完成部署，后台地址http://域名/admin
#建立索引：
mysql
#进入mysql 
#use zsky;
#输入命令
CREATE TABLE `sph_counter` (
  `counter_id` int(11) NOT NULL COMMENT '标识不同的数据表',
  `max_doc_id` int(11) NOT NULL COMMENT '每个索引表的最大ID,会实时更新',
  PRIMARY KEY (`counter_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#CTRL+C退出数据库，执行下面的命令
yum -y install git gcc cmake automake g++ mysql-devel
git clone https://github.com/c4ys/sphinx-jieba
cd sphinx-jieba
git submodule update --init --recursive
./configure --prefix=/usr/local/sphinx-jieba
cp -r cppjieba/include/cppjieba src/ 
cp -r cppjieba/deps/limonp src/ 
make install
cp -r cppjieba/dict/* /usr/local/sphinx-jieba/etc/ 
cd /usr/local/sphinx-jieba/
cp etc/jieba.dict.utf8 etc/xdictjieba.dict.utf8
cp etc/user.dict.utf8 etc/xdictuser.dict.utf8
cp etc/hmm_model.utf8 etc/xdicthmm_model.utf8
cp etc/idf.utf8 etc/xdictidf.utf8
cp etc/stop_words.utf8 etc/xdictstop_words.utf8
/usr/local/sphinx-jieba/bin/indexer -c /root/zsky/sphinx.conf film --rotate
/usr/local/sphinx-jieba/bin/searchd --config /root/zsky/sphinx.conf

#开机自启动
chmod +x /etc/rc.d/rc.local
echo "systemctl start  mariadb.service" >> /etc/rc.d/rc.local
echo "systemctl start  redis.service" >> /etc/rc.d/rc.local
echo "systemctl start  nginx.service" >> /etc/rc.d/rc.local
echo "cd /root/zsky/" >> /etc/rc.d/rc.local
echo "nohup python simdht_worker.py >/dev/zero 2>&1&" >> /etc/rc.d/rc.local
echo "nohup gunicorn -k gevent manage:app -b 127.0.0.1:8000 --reload>/dev/zero 2>&1&"  >> /etc/rc.d/rc.local
echo "/usr/local/sphinx-jieba/bin/indexer -c /root/zsky/sphinx.conf --all" >> /etc/rc.d/rc.local
echo "/usr/local/sphinx-jieba/bin/searchd --config /root/zsky/sphinx.conf" >> /etc/rc.d/rc.local
#设置计划任务
systemctl start crond.service
crontab -e
30 1 * * *  /bin/sh /usr/local/sphinx-jieba/bin/indexer -c /root/zsky/sphinx.conf --all --rotate
